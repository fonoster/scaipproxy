#!/usr/bin/env sh

set -e

HOME="$(cd "$(dirname "$0")"; pwd)"
RESTART_CODE=123

[ -d "$HOME/jre" ] && JAVA_HOME=$HOME/jre
[ -z "$LOG4J2" ] && LOG4J2=config/log4j2.yml
[ -z "$DATA" ] && DATA=$HOME

run() {
    cd $HOME
    $JAVA_HOME/bin/java \
    -Xshare:off \
    -javaagent:libs/applicationinsights-agent-3.1.0.jar \
    -DDATA=$DATA \
    -Dlog4j.configurationFile=$LOG4J2 \
    -Dpolyglot.js.experimental-foreign-object-prototype=true \
    -Dpolyglot.js.nashorn-compat=true \
    $JAVA_OPTS \
    -classpath "$HOME/libs/*" \
    com.fonoster.scaipproxy.core.Launcher
    return $?
}

if [ -f /.dockerenv ]; then
    DOCKER_HOST=$(ip -4 addr show eth0 | grep -Po 'inet \K[\d.]+')
    #[ -z "$EXTERN_ADDR" ] && { echo "Must define environment variable EXTERN_ADDR when running inside a container"; exit 1; }
    [ -z "$LOCALNETS" ] && export LOCALNETS=$(netdiscover -field privatev4)/31
    [ -z "$BIND_ADDR" ] && export BIND_ADDR=$DOCKER_HOST
fi

[ -z "$JAVA_HOME" ] && { echo "Could not find a runtime environment. Please setup the JAVA_HOME environment variable"; exit 1; }

{
    until false; do
      run
      exit_code=$?
      if [ $exit_code -ne $RESTART_CODE ] ; then
          break
      fi
    done
} || { # your 'catch' block
    echo 'Done'
}
